package de.swt2bib.ui.panels;

import de.swt2bib.Logger;
import de.swt2bib.datenlogik.dto.Medien;
import de.swt2bib.fachlogik.languageverwaltung.PropertyName;
import de.swt2bib.ui.ElternComboboxPanel;
import de.swt2bib.ui.PanelHandler;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.Properties;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author root
 */
public class SelectPanel extends ElternComboboxPanel {

    private Medien medium;
    private Properties props;

    /**
     * Creates new form SelectPanel
     * @param panelHandler Angabe Panelhandler
     */
    public SelectPanel(PanelHandler panelHandler) {
        super(panelHandler);
        initComponents();
        setComboboxDate(dateComboBox);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        beschreibungField = new javax.swing.JTextArea();
        ausleihenButton = new javax.swing.JButton();
        statusField = new javax.swing.JTextField();
        bearbeitenButton = new javax.swing.JButton();
        nameLable = new javax.swing.JLabel();
        statusLable = new javax.swing.JLabel();
        genreLable = new javax.swing.JLabel();
        kategorieLable = new javax.swing.JLabel();
        beschreibungLable = new javax.swing.JLabel();
        genreComboBox = new javax.swing.JComboBox<>();
        kategorieComboBox = new javax.swing.JComboBox<>();
        sucheField = new javax.swing.JTextField();
        dateLable = new javax.swing.JLabel();
        dateComboBox = new javax.swing.JComboBox<>();
        infoLabel = new javax.swing.JLabel();

        nameField.setText("jTextField1");
        nameField.setEnabled(false);

        beschreibungField.setColumns(20);
        beschreibungField.setRows(5);
        beschreibungField.setText("Text");
        beschreibungField.setEnabled(false);
        jScrollPane1.setViewportView(beschreibungField);

        ausleihenButton.setText("Ausleihen");
        ausleihenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ausleihenButtonActionPerformed(evt);
            }
        });

        statusField.setText("jTextField2");
        statusField.setEnabled(false);

        bearbeitenButton.setText("Speichern");
        bearbeitenButton.setEnabled(false);
        bearbeitenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bearbeitenButtonActionPerformed(evt);
            }
        });

        nameLable.setText("Name:");

        statusLable.setText("Status:");

        genreLable.setText("Genre:");

        kategorieLable.setText("Kategorie:");

        beschreibungLable.setText("Beschreibung:");

        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        genreComboBox.setEnabled(false);

        kategorieComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        kategorieComboBox.setEnabled(false);

        sucheField.setText("Titelsuche...");
        sucheField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sucheFieldActionPerformed(evt);
            }
        });

        dateLable.setText("Ausleihen bis:");

        dateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        infoLabel.setText("Status:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dateLable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ausleihenButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(infoLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLable)
                            .addComponent(beschreibungLable)
                            .addComponent(kategorieLable))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(kategorieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(genreLable)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23))
                                    .addComponent(bearbeitenButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(statusLable))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(sucheField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sucheField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLable)
                    .addComponent(statusLable)
                    .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beschreibungLable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kategorieLable)
                            .addComponent(kategorieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ausleihenButton)
                            .addComponent(infoLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genreLable)
                            .addComponent(genreComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(bearbeitenButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateLable)
                    .addComponent(dateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Führt eine Suche aus.
     *
     * @param evt
     */
    private void sucheFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sucheFieldActionPerformed
        panelHandler.panelUnsichtbar();
        panelHandler.getSuchePanel().setSearchTitel(sucheField.getText());
        panelHandler.getSuchePanel().setVisible(true);
    }//GEN-LAST:event_sucheFieldActionPerformed

    /**
     * Öffnet das Bearbeiten Panel.
     *
     * @param evt
     */
    private void bearbeitenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bearbeitenButtonActionPerformed
        String name = nameField.getText();
        String desc = beschreibungField.getText();
        panelHandler.saveMediumChange(medium.getIsbn(), medium.getBarcodenummer(), genreComboBox.getSelectedItem(), kategorieComboBox.getSelectedItem(), name, medium.getId(), medium.getAnzahl(), medium.getAuthor(), desc);
        infoLabel.setText((String) props.get(PropertyName.SELECTPANEL_STATUS_GESPEICHERT));
    }//GEN-LAST:event_bearbeitenButtonActionPerformed

    /**
     * Öffnet das Ausleihe Panel.
     *
     * @param evt
     */
    private void ausleihenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ausleihenButtonActionPerformed
        Date date = new Date(dateComboBox.getSelectedItem().toString() + "");
        panelHandler.createNewAusleihe(medium.getId(), date, medium.getKategorienId());
        infoLabel.setText((String) props.get(PropertyName.SELECTPANEL_STATUS_AUSGELIEHEN));
        ausleihenButton.setEnabled(false);
    }//GEN-LAST:event_ausleihenButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ausleihenButton;
    private javax.swing.JButton bearbeitenButton;
    private javax.swing.JTextArea beschreibungField;
    private javax.swing.JLabel beschreibungLable;
    private javax.swing.JComboBox<String> dateComboBox;
    private javax.swing.JLabel dateLable;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JLabel genreLable;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> kategorieComboBox;
    private javax.swing.JLabel kategorieLable;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLable;
    private javax.swing.JTextField statusField;
    private javax.swing.JLabel statusLable;
    private javax.swing.JTextField sucheField;
    // End of variables declaration//GEN-END:variables

    /**
     * Setzt die Mitarbeiterfunktionen auf true.
     */
    public void setMitarbeiter() {
        bearbeitenButton.setEnabled(true);
        genreComboBox.setEnabled(true);
        kategorieComboBox.setEnabled(true);
        beschreibungField.setEnabled(true);
        nameField.setEnabled(true);
        statusField.setEnabled(true);
    }

    /**
     * Setzt ein Medium.
     *
     * @param m Medium
     */
    public void setMedium(Medien m) {
        medium = m;
        infoLabel.setText((String) props.get(PropertyName.SELECTPANEL_STATUS));
        if (panelHandler.getVerfuegbare((int) m.getId()) == 0) {
            statusField.setText((String) props.get(PropertyName.SELECTPANEL_AUSGELIEHEN));
            ausleihenButton.setEnabled(false);
        } else {
            statusField.setText((String) props.get(PropertyName.SELECTPANEL_VORHANDEN));
            ausleihenButton.setEnabled(true);
        }
        beschreibungField.setText(m.getDesc());
        nameField.setText(m.getName());
    }
/**
     * Füllt die ComboBox mit Datum Informationen
     *
     * @param combobox ComboBox, welche gefüllt werden soll
     */
    private void setComboboxDate(JComboBox combobox) {
        ArrayList<Date> datelist = new ArrayList<Date>();
        for (int i = 15; i <= 45; i += 15) {
            datelist.add(addDays(i));
        }
        String[] tmp = new String[datelist.size()];
        for (int i = 0; i < datelist.size(); i++) {
            DateFormat formatter = new SimpleDateFormat("EEE, dd MMM yyyy", Locale.ENGLISH);
            String date = formatter.format(datelist.get(i));
            tmp[i] = date;
        }
        combobox.setModel(new DefaultComboBoxModel(tmp));
    }

    /**
     * Fügt dem Kalender Tage hinzu.
     *
     * @param days Angabe der Tage
     * @return Datum bis wann man es ausleihen kann
     */
    private static Date addDays(int days) {
        Calendar c = new GregorianCalendar();
        c.add(Calendar.DATE, days);
        Date date = c.getTime();
        return date;
    }

    /**
     * Updatet die Informationen im aktuellen Panel.
     */
    @Override
    public void update() {
        Logger.info(this, "update");
        setComboboxKategorie(kategorieComboBox, panelHandler.getKategorieListe());
        setComboboxGenre(genreComboBox, panelHandler.getGenreListe());
    }

    /**
     * Setzt die Sprachkonfiguration anhand der Properties um.
     *
     * @param props Properties Datei
     */
    @Override
    public void updateLanguage(Properties props) {
        this.props = props;
        sucheField.setText((String) props.get(PropertyName.SUCHEFIELD));
        nameLable.setText((String) props.get(PropertyName.SELECTPANEL_NAMELABLE));
        statusLable.setText((String) props.get(PropertyName.SELECTPANEL_STATUSLABLE));
        beschreibungLable.setText((String) props.get(PropertyName.SELECTPANEL_BESCHREIBUNGLABLE));
        kategorieLable.setText((String) props.get(PropertyName.SELECTPANEL_KATEGORIELABLE));
        genreLable.setText((String) props.get(PropertyName.SELECTPANEL_GENRELABLE));
        ausleihenButton.setText((String) props.get(PropertyName.SELECTPANEL_AUSLEIHENBUTTON));
        infoLabel.setText((String) props.get(PropertyName.SELECTPANEL_INFOLABEL));
        dateLable.setText((String) props.get(PropertyName.SELECTPANEL_DATELABLE));
    }
}
